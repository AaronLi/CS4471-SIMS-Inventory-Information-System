# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import item_messages_pb2 as item__messages__pb2
import shelf_messages_pb2 as shelf__messages__pb2
import slot_messages_pb2 as slot__messages__pb2
import user_messages_pb2 as user__messages__pb2


class SimsInventoryInformationSystemStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateUser = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/CreateUser',
                request_serializer=user__messages__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=user__messages__pb2.CreateUserResponse.FromString,
                )
        self.ReadUser = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/ReadUser',
                request_serializer=user__messages__pb2.ReadUserRequest.SerializeToString,
                response_deserializer=user__messages__pb2.ReadUserResponse.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/DeleteUser',
                request_serializer=user__messages__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=user__messages__pb2.DeleteUserResponse.FromString,
                )
        self.CreateShelf = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/CreateShelf',
                request_serializer=shelf__messages__pb2.CreateShelfRequest.SerializeToString,
                response_deserializer=shelf__messages__pb2.CreateShelfResponse.FromString,
                )
        self.ReadShelf = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/ReadShelf',
                request_serializer=shelf__messages__pb2.ReadShelfRequest.SerializeToString,
                response_deserializer=shelf__messages__pb2.ReadShelfResponse.FromString,
                )
        self.UpdateShelf = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/UpdateShelf',
                request_serializer=shelf__messages__pb2.UpdateShelfRequest.SerializeToString,
                response_deserializer=shelf__messages__pb2.UpdateShelfResponse.FromString,
                )
        self.DeleteShelf = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/DeleteShelf',
                request_serializer=shelf__messages__pb2.DeleteShelfRequest.SerializeToString,
                response_deserializer=shelf__messages__pb2.DeleteShelfResponse.FromString,
                )
        self.CreateSlot = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/CreateSlot',
                request_serializer=slot__messages__pb2.CreateSlotRequest.SerializeToString,
                response_deserializer=slot__messages__pb2.CreateSlotResponse.FromString,
                )
        self.ReadSlot = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/ReadSlot',
                request_serializer=slot__messages__pb2.ReadSlotRequest.SerializeToString,
                response_deserializer=slot__messages__pb2.ReadSlotResponse.FromString,
                )
        self.UpdateSlot = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/UpdateSlot',
                request_serializer=slot__messages__pb2.UpdateSlotRequest.SerializeToString,
                response_deserializer=slot__messages__pb2.UpdateSlotResponse.FromString,
                )
        self.DeleteSlot = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/DeleteSlot',
                request_serializer=slot__messages__pb2.DeleteSlotRequest.SerializeToString,
                response_deserializer=slot__messages__pb2.DeleteSlotResponse.FromString,
                )
        self.CreateSlots = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/CreateSlots',
                request_serializer=slot__messages__pb2.CreateSlotsRequest.SerializeToString,
                response_deserializer=slot__messages__pb2.CreateSlotsResponse.FromString,
                )
        self.CreateItem = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/CreateItem',
                request_serializer=item__messages__pb2.CreateItemRequest.SerializeToString,
                response_deserializer=item__messages__pb2.CreateItemResponse.FromString,
                )
        self.ReadItem = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/ReadItem',
                request_serializer=item__messages__pb2.ReadItemRequest.SerializeToString,
                response_deserializer=item__messages__pb2.ReadItemResponse.FromString,
                )
        self.UpdateItem = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/UpdateItem',
                request_serializer=item__messages__pb2.UpdateItemRequest.SerializeToString,
                response_deserializer=item__messages__pb2.UpdateItemResponse.FromString,
                )
        self.DeleteItem = channel.unary_unary(
                '/SimsIMS.SimsInventoryInformationSystem/DeleteItem',
                request_serializer=item__messages__pb2.DeleteItemRequest.SerializeToString,
                response_deserializer=item__messages__pb2.DeleteItemResponse.FromString,
                )


class SimsInventoryInformationSystemServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateShelf(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadShelf(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateShelf(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteShelf(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSlot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadSlot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSlot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSlot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSlots(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SimsInventoryInformationSystemServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=user__messages__pb2.CreateUserRequest.FromString,
                    response_serializer=user__messages__pb2.CreateUserResponse.SerializeToString,
            ),
            'ReadUser': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadUser,
                    request_deserializer=user__messages__pb2.ReadUserRequest.FromString,
                    response_serializer=user__messages__pb2.ReadUserResponse.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=user__messages__pb2.DeleteUserRequest.FromString,
                    response_serializer=user__messages__pb2.DeleteUserResponse.SerializeToString,
            ),
            'CreateShelf': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateShelf,
                    request_deserializer=shelf__messages__pb2.CreateShelfRequest.FromString,
                    response_serializer=shelf__messages__pb2.CreateShelfResponse.SerializeToString,
            ),
            'ReadShelf': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadShelf,
                    request_deserializer=shelf__messages__pb2.ReadShelfRequest.FromString,
                    response_serializer=shelf__messages__pb2.ReadShelfResponse.SerializeToString,
            ),
            'UpdateShelf': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateShelf,
                    request_deserializer=shelf__messages__pb2.UpdateShelfRequest.FromString,
                    response_serializer=shelf__messages__pb2.UpdateShelfResponse.SerializeToString,
            ),
            'DeleteShelf': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteShelf,
                    request_deserializer=shelf__messages__pb2.DeleteShelfRequest.FromString,
                    response_serializer=shelf__messages__pb2.DeleteShelfResponse.SerializeToString,
            ),
            'CreateSlot': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSlot,
                    request_deserializer=slot__messages__pb2.CreateSlotRequest.FromString,
                    response_serializer=slot__messages__pb2.CreateSlotResponse.SerializeToString,
            ),
            'ReadSlot': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadSlot,
                    request_deserializer=slot__messages__pb2.ReadSlotRequest.FromString,
                    response_serializer=slot__messages__pb2.ReadSlotResponse.SerializeToString,
            ),
            'UpdateSlot': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSlot,
                    request_deserializer=slot__messages__pb2.UpdateSlotRequest.FromString,
                    response_serializer=slot__messages__pb2.UpdateSlotResponse.SerializeToString,
            ),
            'DeleteSlot': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSlot,
                    request_deserializer=slot__messages__pb2.DeleteSlotRequest.FromString,
                    response_serializer=slot__messages__pb2.DeleteSlotResponse.SerializeToString,
            ),
            'CreateSlots': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSlots,
                    request_deserializer=slot__messages__pb2.CreateSlotsRequest.FromString,
                    response_serializer=slot__messages__pb2.CreateSlotsResponse.SerializeToString,
            ),
            'CreateItem': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateItem,
                    request_deserializer=item__messages__pb2.CreateItemRequest.FromString,
                    response_serializer=item__messages__pb2.CreateItemResponse.SerializeToString,
            ),
            'ReadItem': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadItem,
                    request_deserializer=item__messages__pb2.ReadItemRequest.FromString,
                    response_serializer=item__messages__pb2.ReadItemResponse.SerializeToString,
            ),
            'UpdateItem': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateItem,
                    request_deserializer=item__messages__pb2.UpdateItemRequest.FromString,
                    response_serializer=item__messages__pb2.UpdateItemResponse.SerializeToString,
            ),
            'DeleteItem': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteItem,
                    request_deserializer=item__messages__pb2.DeleteItemRequest.FromString,
                    response_serializer=item__messages__pb2.DeleteItemResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SimsIMS.SimsInventoryInformationSystem', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SimsInventoryInformationSystem(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/CreateUser',
            user__messages__pb2.CreateUserRequest.SerializeToString,
            user__messages__pb2.CreateUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/ReadUser',
            user__messages__pb2.ReadUserRequest.SerializeToString,
            user__messages__pb2.ReadUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/DeleteUser',
            user__messages__pb2.DeleteUserRequest.SerializeToString,
            user__messages__pb2.DeleteUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateShelf(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/CreateShelf',
            shelf__messages__pb2.CreateShelfRequest.SerializeToString,
            shelf__messages__pb2.CreateShelfResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadShelf(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/ReadShelf',
            shelf__messages__pb2.ReadShelfRequest.SerializeToString,
            shelf__messages__pb2.ReadShelfResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateShelf(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/UpdateShelf',
            shelf__messages__pb2.UpdateShelfRequest.SerializeToString,
            shelf__messages__pb2.UpdateShelfResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteShelf(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/DeleteShelf',
            shelf__messages__pb2.DeleteShelfRequest.SerializeToString,
            shelf__messages__pb2.DeleteShelfResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSlot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/CreateSlot',
            slot__messages__pb2.CreateSlotRequest.SerializeToString,
            slot__messages__pb2.CreateSlotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadSlot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/ReadSlot',
            slot__messages__pb2.ReadSlotRequest.SerializeToString,
            slot__messages__pb2.ReadSlotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSlot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/UpdateSlot',
            slot__messages__pb2.UpdateSlotRequest.SerializeToString,
            slot__messages__pb2.UpdateSlotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSlot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/DeleteSlot',
            slot__messages__pb2.DeleteSlotRequest.SerializeToString,
            slot__messages__pb2.DeleteSlotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSlots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/CreateSlots',
            slot__messages__pb2.CreateSlotsRequest.SerializeToString,
            slot__messages__pb2.CreateSlotsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/CreateItem',
            item__messages__pb2.CreateItemRequest.SerializeToString,
            item__messages__pb2.CreateItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/ReadItem',
            item__messages__pb2.ReadItemRequest.SerializeToString,
            item__messages__pb2.ReadItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/UpdateItem',
            item__messages__pb2.UpdateItemRequest.SerializeToString,
            item__messages__pb2.UpdateItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SimsIMS.SimsInventoryInformationSystem/DeleteItem',
            item__messages__pb2.DeleteItemRequest.SerializeToString,
            item__messages__pb2.DeleteItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
